{
	"info": {
		"_postman_id": "9f65e8ee-645f-4e56-a363-59cc20493c2e",
		"name": "Pruebas Implemento",
		"description": "Colección de pruebas sobre el recurso Editorial",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un implemento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c6b89867-fe67-48e3-ae95-6c6e388cc7c8",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"nuevo_nombre_i\", data.nombre);",
							"postman.setGlobalVariable(\"nuevo_id_i\", data.id);",
							"tests['No genera error en el Post'] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Pesas {{$randomInt}}\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/implementos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"implementos"
					]
				},
				"description": "Crea un nuevo implemento. El recurso solo tiene de atributo \"nombre\" que debe ser único. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
<<<<<<< HEAD
			"response": [
				{
					"name": "Crear un implemento",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"nombre\": \"Pesas\"\n}"
						},
						"url": {
							"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/implementos",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{puerto}}",
							"path": [
								"s2_centrodeportivo-api",
								"api",
								"implementos"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Length",
							"value": "18",
							"name": "Content-Length",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Sat, 08 Sep 2018 15:41:49 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Server",
							"value": "Payara Server  4.1.2.174 #badassfish",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "X-Frame-Options",
							"value": "SAMEORIGIN",
							"name": "X-Frame-Options",
							"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
						},
						{
							"key": "X-Powered-By",
							"value": "Servlet/3.1 JSP/2.3 (Payara Server  4.1.2.174 #badassfish Java/Oracle Corporation/1.8)",
							"name": "X-Powered-By",
							"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
						}
					],
					"cookie": [],
					"body": "{\"nombre\":\"Pesas\"}"
				}
			]
=======
			"response": []
>>>>>>> 36cf202af2e2448c8cbe8a4e03fc682fee41ca8a
		},
		{
			"name": "Crear un implemento con el mismo nombre",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b7b77959-d510-41c4-8f97-e5f251bdc263",
						"type": "text/javascript",
						"exec": [
							"tests[\"No crea con el mismo nombre\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"Ya existe un implemento con el nombre\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"{{nuevo_nombre_i}}\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/implementos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"implementos"
					]
				},
				"description": "Crea un nuevo implemento pero con un nombre que ya existe. Verifica que se genera el error y el mensaje \"Ya existe un implemento con el nombre\".\r\n\r\n**Código HTTP esperado: 412 Precondition failed\".**"
			},
			"response": []
		},
		{
			"name": "Editar un implemento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1ba3a9f-12f2-4dea-8ed8-328c08edb346",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Pesas {{$randomInt}}\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/implementos/{{nuevo_id_i}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"implementos",
						"{{nuevo_id_i}}"
					]
				},
				"description": "Actualiza un implemento existente. El recurso solo tiene de atributo \"nombre\" que debe ser único. Se envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Editar un implemento que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4f125d7c-3554-4f9b-9e01-3e929de7ae08",
						"type": "text/javascript",
						"exec": [
							"tests[\"No actualiza con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /implementos/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"{{nuevo_nombre_i}}\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/implementos/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"implementos",
						"0"
					]
				},
				"description": "Actualiza un implemento que no existe. \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /implementos/0 no existe.\".\r\n\r\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Obtener todos los implementos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9a1d5930-a1dc-42f0-b2ad-c8e47a9f9484",
						"type": "text/javascript",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Get all\"] = responseCode.code === 200;",
							"tests[\"implementos count\"] = data.length > 1;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/implementos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"implementos"
					]
				},
				"description": "Consulta todos los implementos de la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nPara la prueba, se verifica que el conjunto de implementos en la respuesta tenga más de uno.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un implemento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "72eef936-ea33-42c0-b849-f74c32c1e6c6",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/implementos/{{nuevo_id_i}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"implementos",
						"{{nuevo_id_i}}"
					]
				},
				"description": "Consulta un implemento de la aplicación.  \r\nLa petición no tiene cuerpo.\r\nSe envía el id del implemento deseado por la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un implemento que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "abc48a9e-ac00-47ca-bb08-aacc327b6f0a",
						"type": "text/javascript",
						"exec": [
							"tests[\"No consulta con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /implementos/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/implementos/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"implementos",
						"0"
					]
				},
				"description": "Consulta un implemento que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /implementos/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar un implemento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bbc923bd-eb17-44c4-8151-b3acec604364",
						"type": "text/javascript",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/implementos/{{nuevo_id_i}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"implementos",
						"{{nuevo_id_i}}"
					]
				},
				"description": "Borra un implemento. Se envía el id de la entidad creada anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un implemento que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "379f5468-f758-457b-b9d8-330d553ce042",
						"type": "text/javascript",
						"exec": [
							"tests[\"No borra con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /implementos/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/implementos/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"implementos",
						"0"
					]
				},
				"description": "Borra un implemento que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /implementos/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2d0e0620-f501-4edf-ac66-69de3bdf924f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7b78492d-c46e-4d6a-8d90-f7dc92e1d0ac",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}