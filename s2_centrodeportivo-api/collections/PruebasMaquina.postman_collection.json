{
	"info": {
		"_postman_id": "70c3b08c-74bd-4993-96c7-62d28e02e732",
		"name": "PruebasMaquina",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear una máquina",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb3e7461-f7e0-468e-8780-e7d9998c4a67",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"nuevo_id_m\", data.id);",
							"tests['No genera error en el Post'] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\":\"caminadora\",\n\t\"referencia\": \"1589\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/maquinas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"maquinas"
					]
				},
				"description": "Crea una nueva máquina. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crear una maquina 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0a02f715-5caa-4351-9722-bdd58c670c90",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"nuevo_id2_m\", data.id);",
							"tests['No genera error en el Post'] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"eliptica\",\n\t\"referencia\" : \"14723\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/maquinas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"maquinas"
					]
				},
				"description": "Crea una nueva máquina. El Id es inicializado por la BD y se debe ver en la respuesta.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Devuelve todas las máquinas",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f380cd08-e290-4edd-8948-a9df09b60e90",
						"type": "text/javascript",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Get all\"] = responseCode.code === 200;",
							"tests[\"maquinas count\"] = data.length > 1;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/maquinas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"maquinas"
					]
				},
				"description": "Consulta todos las máquinas de la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nPara la prueba, se verifica que el conjunto de máquinas en la respuesta tenga más de uno.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Dar una máquina",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b13fe4b2-a7b0-44ea-bd31-0024994f906d",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/maquinas/{{nuevo_id_m}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"maquinas",
						"{{nuevo_id_m}}"
					]
				},
				"description": "Consulta una máquina de la aplicación.  \r\nLa petición no tiene cuerpo.\r\nSe envía el id de la máquina deseada por la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Dar una máquina 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b13fe4b2-a7b0-44ea-bd31-0024994f906d",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/maquinas/{{nuevo_id2_m}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"maquinas",
						"{{nuevo_id2_m}}"
					]
				},
				"description": "Consulta una máquina de la aplicación.  \r\nLa petición no tiene cuerpo.\r\nSe envía el id del implemento deseado por la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Dar una máquina que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "abc48a9e-ac00-47ca-bb08-aacc327b6f0a",
						"exec": [
							"tests[\"No consulta con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /maquinas/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/maquinas/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"maquinas",
						"0"
					]
				},
				"description": "Consulta una máquina que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /maquinas/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Actualizar una máquina",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "97552cc2-2994-4f21-a09d-c127d7f3de5c",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"calorias\":\"290\",\n\t\"referencia\": \"1234\",\n\t\"velocidad\":\"50\",\n\t\"velocidadPromedio\": \"50\",\n\t\"tiempo\":\"100\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/maquinas/{{nuevo_id_m}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"maquinas",
						"{{nuevo_id_m}}"
					]
				},
				"description": "Actualiza una máquina existente. Se envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Actualizar una máquina que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4f125d7c-3554-4f9b-9e01-3e929de7ae08",
						"exec": [
							"tests[\"No actualiza con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /maquinas/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"{{nuevo_nombre_i}}\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/maquinas/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"maquinas",
						"0"
					]
				},
				"description": "Actualiza una máquina que no existe. \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /maquinas/0 no existe.\".\r\n\r\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Eliminar una máquina",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bba94033-6377-42ed-8d54-591112ec89a3",
						"type": "text/javascript",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/maquinas/{{nuevo_id_m}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"maquinas",
						"{{nuevo_id_m}}"
					]
				},
				"description": "Borra una máquina. Se envía el id de la entidad creada anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Eliminar una máquina que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a47cdf0-2947-4e3d-8c2c-e1cb7858e0c5",
						"type": "text/javascript",
						"exec": [
							"tests[\"No borra con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /maquinas/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_centrodeportivo-api/api/maquinas/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_centrodeportivo-api",
						"api",
						"maquinas",
						"0"
					]
				},
				"description": "Borra una máquina que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /maquinas/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "80aabc1c-067c-4437-8c87-25e29eb5a71e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2952099f-5645-404b-8e43-2ced659a3674",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}